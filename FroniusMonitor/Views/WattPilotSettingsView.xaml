<Window x:Class="De.Hochstaetter.FroniusMonitor.Views.WattPilotSettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
        xmlns:vm="clr-namespace:De.Hochstaetter.FroniusMonitor.ViewModels"
        xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
        xmlns:v="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Validation"
        xmlns:c="clr-namespace:De.Hochstaetter.FroniusMonitor.Controls"
        mc:Ignorable="d"
        Title="{Binding Title}" SizeToContent="WidthAndHeight"  ResizeMode="CanMinimize"
        d:DataContext="{d:DesignInstance Type=vm:WattPilotSettingsViewModel}">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="8,0,0,0" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="MinWidth" Value="70" />
                <Setter Property="Padding" Value="8,0" />
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="0,4,0,4" />
            </Style>
            <Style TargetType="ComboBox" x:Key="StandardComboBox">
                <Setter Property="Margin" Value="8,4,0,4" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource StandardComboBox}" />
            <Style TargetType="TextBox" x:Key="StandardTextBox">
                <Setter Property="Width" Value="100" />
                <Setter Property="MinHeight" Value="26"></Setter>
                <Setter Property="Margin" Value="8,4,0,4" />
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="TextBox" BasedOn="{StaticResource StandardTextBox}"/>
            <Style TargetType="c:PasswordBox" BasedOn="{StaticResource StandardTextBox}">
                <Setter Property="Template" Value="{StaticResource PasswordBoxTemplate}"/>
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Margin" Value="0,8,0,0" />
            </Style>
        </Grid.Resources>

        <StackPanel Grid.Row="0" Grid.Column="0" >
            <GroupBox Margin="8,8,8,0" Header="{x:Static p:Resources.BaseSettings}">
                <StackPanel Margin="8" Grid.IsSharedSizeScope="True">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="G1"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="G2"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="G3"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static p:Resources.WattPilotName}"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Text=":"/>
                        <TextBox Grid.Column="2" Grid.Row="0" MinWidth="250" MaxLength="32" Text="{Binding WattPilot.DeviceName}"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Static p:Resources.CableLockBehavior}"/>
                        <TextBlock Grid.Column="1" Grid.Row="1" Text=":"/>
                        <ComboBox Grid.Column="2" Grid.Row="1" MinWidth="250" ItemsSource="{Binding CableLockBehaviors}" SelectedItem="{Binding WattPilot.CableLockBehavior}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="0,2,0,0" Height="20" Text="{Binding Converter={co:Enum2DisplayName}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static p:Resources.ChargingLogic}"/>
                        <TextBlock Grid.Column="1" Grid.Row="2" Text=":"/>
                        <ComboBox Grid.Column="2" Grid.Row="2" MinWidth="250" ItemsSource="{Binding ChargingLogicList}" SelectedItem="{Binding WattPilot.ChargingLogic}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="0,2,0,0" Height="20" Text="{Binding Converter={co:Enum2DisplayName}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Grid.Column="0" Grid.Row="3" Text="{x:Static p:Resources.ApiKey}"/>
                        <TextBlock Grid.Column="1" Grid.Row="3" Text=":"/>
                        <c:PasswordBox Grid.Column="2" Grid.Row="3" MinWidth="250" Password="{Binding WattPilot.CloudAccessKey}"/>
                    </Grid>

                    <CheckBox Content="{x:Static p:Resources.UnlockCableOnPowerFailure}" IsChecked="{Binding WattPilot.UnlockCableOnPowerFailure}"/>
                    <CheckBox Content="{x:Static p:Resources.RequireRfidAuth}" IsChecked="{Binding WattPilot.AccessMode, Converter={co:AccessMode2Bool}}"/>
                    <CheckBox Content="{Binding ApiLink}" IsChecked="{Binding WattPilot.CloudAccessEnabled}"/>
                    <CheckBox IsChecked="{Binding WattPilot.DisableProtectiveEarth}" Content="{x:Static p:Resources.DisableProtectiveEarth}"/>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center">
                        <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.MaximumChargingCurrent}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                             Text="{co:ValidationBinding Path=WattPilot.MaximumChargingCurrent, Rule={v:MinMaxIntRule Minimum=0, Maximum=32}}" />
                        <TextBlock Margin="4,0,0,0" Text="A" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.MaximumChargingCurrent, Mode=TwoWay}" HorizontalAlignment="Stretch" Minimum="{Binding WattPilot.MinimumChargingCurrent}" Maximum="{Binding WattPilot.AbsoluteMaximumChargingCurrent}" />

                </StackPanel>
            </GroupBox>

            <GroupBox Margin="8,0,8,4" Header="{x:Static p:Resources.CarSettings}">
                <StackPanel Margin="8" Grid.IsSharedSizeScope="True">

                    <CheckBox IsChecked="{Binding RequiresChargingInterval}" Content="{x:Static p:Resources.RequiresChargingInterval}"/>
                    <CheckBox IsChecked="{Binding WattPilot.AllowChargingPause}" Content="{x:Static p:Resources.AllowChargingPause}"/>
                    <CheckBox IsChecked="{Binding WattPilot.SimulateUnplugging}" Content="{x:Static p:Resources.SimulateUnplugging}"
                              Visibility="{Binding WattPilot.AllowChargingPause, Converter={co:Bool2Visibility}}"/>

                    <Grid Margin="0,8,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="G1"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="G2"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="G3"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static p:Resources.PhaseSwitchMode}" Visibility="{Binding WattPilot.AllowChargingPause, Converter={co:Bool2Visibility}}"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Text=":" Visibility="{Binding WattPilot.AllowChargingPause, Converter={co:Bool2Visibility}}"/>
                        <ComboBox Grid.Column="2" Grid.Row="0" MinWidth="250" ItemsSource="{Binding PhaseSwitchModes}" SelectedItem="{Binding WattPilot.PhaseSwitchMode}"
                                  Visibility="{Binding WattPilot.AllowChargingPause, Converter={co:Bool2Visibility}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="0,2,0,0" Height="20" Text="{Binding Converter={co:Enum2DisplayName}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                    </Grid>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" ToolTip="{x:Static p:Resources.MinimumChargingCurrent_ToolTip}">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.MinimumChargingCurrent}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=WattPilot.MinimumChargingCurrent, Rule={v:MinMaxIntRule Minimum=6, Maximum=32}}" />
                        <TextBlock Margin="4,0,0,0" Text="A" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.MinimumChargingCurrent, Mode=TwoWay}" HorizontalAlignment="Stretch" Minimum="6" Maximum="{Binding WattPilot.AbsoluteMaximumChargingCurrent}" />

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding RequiresChargingInterval, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.MinimumChargingInterval}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=WattPilot.MinimumChargingInterval, Converter={co:Milliseconds2Minutes}, Rule={v:MinMaxIntRule Minimum=5, Maximum=35791}}" />
                        <TextBlock Margin="4,0,0,0" Text="{x:Static p:Resources.Minutes}" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.MinimumChargingInterval, Mode=TwoWay}" TickFrequency="60000" IsSnapToTickEnabled="True" HorizontalAlignment="Stretch" Minimum="300000" Maximum="14400000"
                            Visibility="{Binding RequiresChargingInterval, Converter={co:Bool2Visibility}}"/>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.AllowChargingPause, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.MinimumPauseDuration}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=WattPilot.MinimumPauseDuration, Converter={co:Milliseconds2Minutes}, Rule={v:MinMaxIntRule Minimum=0, Maximum=35791}}" />
                        <TextBlock Margin="4,0,0,0" Text="{x:Static p:Resources.Minutes}" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.MinimumPauseDuration, Mode=TwoWay}" TickFrequency="60000" IsSnapToTickEnabled="True" HorizontalAlignment="Stretch" Minimum="0" Maximum="1200000"
                            Visibility="{Binding WattPilot.AllowChargingPause, Converter={co:Bool2Visibility}}"/>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.AllowChargingPause, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.MinimumChargingTime}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=WattPilot.MinimumChargingTime, Converter={co:Milliseconds2Minutes}, Rule={v:MinMaxIntRule Minimum=0, Maximum=35791}}" />
                        <TextBlock Margin="4,0,0,0" Text="{x:Static p:Resources.Minutes}" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.MinimumChargingTime, Mode=TwoWay}" TickFrequency="60000" IsSnapToTickEnabled="True" HorizontalAlignment="Stretch" Minimum="0" Maximum="1200000"
                            Visibility="{Binding WattPilot.AllowChargingPause, Converter={co:Bool2Visibility}}"/>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.AllowPauseAndHasPhaseSwitch, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.PhaseSwitchPower}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=WattPilot.PhaseSwitchPower, Rule={v:MinMaxIntRule Minimum=1400, Maximum=7200}}" />
                        <TextBlock Margin="4,0,0,0" Text="W" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.PhaseSwitchPower, Mode=TwoWay}" TickFrequency="1" IsSnapToTickEnabled="True" HorizontalAlignment="Stretch" Minimum="1400" Maximum="7200"
                            Visibility="{Binding WattPilot.AllowPauseAndHasPhaseSwitch, Converter={co:Bool2Visibility}}"/>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.AllowPauseAndHasPhaseSwitch, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.PhaseSwitchTriggerTime}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=WattPilot.PhaseSwitchTriggerTime, Converter={co:Milliseconds2Minutes}, Rule={v:MinMaxIntRule Minimum=0, Maximum=35791}}" />
                        <TextBlock Margin="4,0,0,0" Text="{x:Static p:Resources.Minutes}" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.PhaseSwitchTriggerTime, Mode=TwoWay}" TickFrequency="60000" IsSnapToTickEnabled="True" HorizontalAlignment="Stretch" Minimum="0" Maximum="1200000"
                            Visibility="{Binding WattPilot.AllowPauseAndHasPhaseSwitch, Converter={co:Bool2Visibility}}"/>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.AllowPauseAndHasPhaseSwitch, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.MinimumTimeBetweenPhaseSwitches}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=WattPilot.MinimumTimeBetweenPhaseSwitches, Converter={co:Milliseconds2Minutes}, Rule={v:MinMaxIntRule Minimum=0, Maximum=35791}}" />
                        <TextBlock Margin="4,0,0,0" Text="{x:Static p:Resources.Minutes}" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.MinimumTimeBetweenPhaseSwitches, Mode=TwoWay}" TickFrequency="60000" IsSnapToTickEnabled="True" HorizontalAlignment="Stretch" Minimum="0" Maximum="1200000"
                            Visibility="{Binding WattPilot.AllowPauseAndHasPhaseSwitch, Converter={co:Bool2Visibility}}"/>

                </StackPanel>
            </GroupBox>

        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="1" >
            <GroupBox Margin="0,8,8,4" Header="{x:Static p:Resources.EcoSettings}">
                <StackPanel Margin="8" Grid.IsSharedSizeScope="True">

                    <CheckBox IsChecked="{Binding WattPilot.PvSurplusEnabled}" Content="{x:Static p:Resources.PvSurplusEnabled}"/>
                    <CheckBox IsChecked="{Binding WattPilot.AwattarEnabled}" Content="{x:Static p:Resources.AwattarEnabled}"/>
                    <CheckBox IsChecked="{Binding WattPilot.NoFeedIn}" Content="{x:Static p:Resources.NoFeedIn}" ToolTip="{x:Static p:Resources.NoFeedIn_ToolTip}"
                          Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}"/>

                    <Grid Margin="0,8,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="G1"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="G2"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="G3"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static p:Resources.AwattarCountry}" Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Text=":" Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}"/>

                        <ComboBox Grid.Column="2" Grid.Row="0" MinWidth="250" ItemsSource="{Binding EnergyPriceCountries}" SelectedItem="{Binding WattPilot.EnergyPriceCountry}"
                              Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="0,2,0,0" Height="20" Text="{Binding Converter={co:Enum2DisplayName}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Static p:Resources.EcoRoundingMode}" Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}"/>
                        <TextBlock Grid.Column="1" Grid.Row="1" Text=":" Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}"/>

                        <ComboBox Grid.Column="2" Grid.Row="1" MinWidth="250" ItemsSource="{Binding EcoRoundingModes}" SelectedItem="{Binding WattPilot.RoundingMode}"
                              Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="0,2,0,0" Height="20" Text="{Binding Converter={co:Enum2DisplayName}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                    </Grid>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.MaxEnergyPrice}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                             Text="{Binding Path=WattPilot.MaxEnergyPrice, StringFormat=N1}" />
                        <TextBlock Margin="4,0,0,0" Text="ct/kWh" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.MaxEnergyPrice, Mode=TwoWay}" HorizontalAlignment="Stretch" TickFrequency=".1" IsSnapToTickEnabled="True" Minimum="-10" Maximum="100"
                        Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}"/>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.PvSurplusBatteryLevel}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                             Text="{Binding Path=WattPilot.PvSurplusBatteryLevel}" />
                        <TextBlock Margin="4,0,0,0" Text="%" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.PvSurplusBatteryLevel, Mode=TwoWay}" HorizontalAlignment="Stretch" Minimum="0" Maximum="100"
                        Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}"/>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.OhmPilotTemperatureLimit}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                             Text="{co:ValidationBinding Path=WattPilot.OhmPilotTemperatureLimitCelsius, Rule={v:MinMaxIntRule Minimum=0, Maximum=100}}" />
                        <TextBlock Margin="4,0,0,0" Text="°C" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.OhmPilotTemperatureLimitCelsius, Mode=TwoWay}" HorizontalAlignment="Stretch" Minimum="0" Maximum="100"
                        Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}"/>

                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}">
                        <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.PvSurplusPowerThreshold}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                             Text="{co:ValidationBinding Path=WattPilot.PvSurplusPowerThreshold, Rule={v:MinMaxIntRule Minimum=0, Maximum=22000}}" />
                        <TextBlock Margin="4,0,0,0" Text="W" />
                    </StackPanel>
                    <Slider Value="{Binding WattPilot.PvSurplusPowerThreshold, Mode=TwoWay}" TickFrequency="1" IsSnapToTickEnabled="True" HorizontalAlignment="Stretch" Minimum="0" Maximum="{Binding WattPilot.MaximumWattPilotPower}"
                        Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}"/>

                </StackPanel>
            </GroupBox>
        </StackPanel>

        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Margin="8,16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="4" VerticalAlignment="Center" Content="{x:Static p:Resources.Undo}" Command="{Binding UndoCommand}" IsEnabled="{Binding IsInUpdate, Converter={co:BoolInverter}}" />
            <Button Grid.Column="5" VerticalAlignment="Center" Content="{x:Static p:Resources.Apply}" Command="{Binding ApplyCommand}" IsEnabled="{Binding IsInUpdate, Converter={co:BoolInverter}}"/>

        </Grid>
    </Grid>
</Window>
