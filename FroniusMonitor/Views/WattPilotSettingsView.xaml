<Window x:Class="De.Hochstaetter.FroniusMonitor.Views.WattPilotSettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
        xmlns:vm="clr-namespace:De.Hochstaetter.FroniusMonitor.ViewModels"
        xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
        xmlns:v="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Validation"
        xmlns:c="clr-namespace:De.Hochstaetter.FroniusMonitor.Controls"
        mc:Ignorable="d"
        Title="{Binding Title}" SizeToContent="WidthAndHeight"  ResizeMode="CanMinimize"
        d:DataContext="{d:DesignInstance Type=vm:WattPilotSettingsViewModel}">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="8,0,0,0" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="MinWidth" Value="70" />
                <Setter Property="Padding" Value="8,0" />
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="0,4,0,4" />
            </Style>
            <Style TargetType="ComboBox" x:Key="StandardComboBox">
                <Setter Property="Margin" Value="8,4,0,4" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource StandardComboBox}" />
            <Style TargetType="TextBox">
                <Setter Property="Width" Value="100" />
                <Setter Property="MinHeight" Value="26"></Setter>
                <Setter Property="Margin" Value="8,4,0,4" />
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Margin" Value="0,8,0,0" />
            </Style>
        </Grid.Resources>

        <GroupBox Margin="8,8,4,4" Grid.Row="0" Grid.Column="0" Header="{x:Static p:Resources.BaseSettings}">
            <StackPanel Margin="8" Grid.IsSharedSizeScope="True">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="G1"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="G2"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="G3"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static p:Resources.WattPilotName}"/>
                    <TextBlock Grid.Column="1" Grid.Row="0" Text=":"/>
                    <TextBox Grid.Column="2" Grid.Row="0" MinWidth="250" MaxLength="32" Text="{Binding WattPilot.DeviceName}"/>
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Static p:Resources.CableLockBehavior}"/>
                    <TextBlock Grid.Column="1" Grid.Row="1" Text=":"/>
                    <ComboBox Grid.Column="2" Grid.Row="1" MinWidth="250" ItemsSource="{Binding CableLockBehaviors}" SelectedItem="{Binding WattPilot.CableLockBehavior}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Margin="0,2,0,0" Height="20" Text="{Binding Converter={co:Enum2DisplayName}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static p:Resources.ChargingLogic}"/>
                    <TextBlock Grid.Column="1" Grid.Row="2" Text=":"/>
                    <ComboBox Grid.Column="2" Grid.Row="2" MinWidth="250" ItemsSource="{Binding ChargingLogicList}" SelectedItem="{Binding WattPilot.ChargingLogic}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Margin="0,2,0,0" Height="20" Text="{Binding Converter={co:Enum2DisplayName}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock Grid.Column="0" Grid.Row="3" Text="{x:Static p:Resources.ApiKey}"/>
                    <TextBlock Grid.Column="1" Grid.Row="3" Text=":"/>
                    <TextBox Grid.Column="2" Grid.Row="3" MinWidth="250" Text="{Binding WattPilot.CloudAccessKey}"/>
                </Grid>

                <CheckBox Content="{x:Static p:Resources.UnlockCableOnPowerFailure}" IsChecked="{Binding WattPilot.UnlockCableOnPowerFailure}"/>
                <CheckBox Content="{x:Static p:Resources.RequireRfidAuth}" IsChecked="{Binding WattPilot.AccessMode, Converter={co:AccessMode2Bool}}"/>
                <CheckBox Content="{Binding ApiLink}" IsChecked="{Binding WattPilot.CloudAccessEnabled}"/>
                <CheckBox IsChecked="{Binding WattPilot.DisableProtectiveEarth}" Content="{x:Static p:Resources.DisableProtectiveEarth}"/>

                <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center">
                    <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.MaximumChargingCurrent}" /><Run Text=":" />
                    </TextBlock>
                    <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                             Text="{co:ValidationBinding Path=WattPilot.MaximumChargingCurrent, Rule={v:MinMaxIntRule Minimum=0, Maximum=32}}" />
                    <TextBlock Margin="4,0,0,0" Text="A" />
                </StackPanel>
                <Slider Value="{Binding WattPilot.MaximumChargingCurrent, Mode=TwoWay}" HorizontalAlignment="Stretch" Minimum="{Binding WattPilot.MinimumChargingCurrent}" Maximum="{Binding WattPilot.AbsoluteMaximumChargingCurrent}" />

            </StackPanel>
        </GroupBox>

        <GroupBox Margin="0,8,8,4" Grid.Row="0" Grid.Column="1" Header="{x:Static p:Resources.EcoSettings}">
            <StackPanel Margin="8" Grid.IsSharedSizeScope="True">

                <CheckBox IsChecked="{Binding WattPilot.PvSurplusEnabled}" Content="{x:Static p:Resources.PvSurplusEnabled}"/>
                <CheckBox IsChecked="{Binding WattPilot.AwattarEnabled}" Content="{x:Static p:Resources.AwattarEnabled}"/>

                <Grid Margin="0,8,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="G1"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="G2"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="G3"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static p:Resources.AwattarCountry}" Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}"/>
                    <TextBlock Grid.Column="1" Grid.Row="0" Text=":" Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}"/>
                    <ComboBox Grid.Column="2" Grid.Row="0" MinWidth="250" ItemsSource="{Binding EnergyPriceCountries}" SelectedItem="{Binding WattPilot.EnergyPriceCountry}"
                              Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Margin="0,2,0,0" Height="20" Text="{Binding Converter={co:Enum2DisplayName}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                </Grid>

                <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}">
                    <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.MaxEnergyPrice}" /><Run Text=":" />
                    </TextBlock>
                    <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                             Text="{Binding Path=WattPilot.MaxEnergyPrice, StringFormat=N1}" />
                    <TextBlock Margin="4,0,0,0" Text="ct/kWh" />
                </StackPanel>
                <Slider Value="{Binding WattPilot.MaxEnergyPrice, Mode=TwoWay}" HorizontalAlignment="Stretch" TickFrequency=".1" IsSnapToTickEnabled="True" Minimum="-10" Maximum="100"
                        Visibility="{Binding WattPilot.AwattarEnabled, Converter={co:Bool2Visibility}}"/>

                <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}">
                    <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.PvSurplusBatteryLevel}" /><Run Text=":" />
                    </TextBlock>
                    <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                             Text="{Binding Path=WattPilot.PvSurplusBatteryLevel}" />
                    <TextBlock Margin="4,0,0,0" Text="%" />
                </StackPanel>
                <Slider Value="{Binding WattPilot.PvSurplusBatteryLevel, Mode=TwoWay}" HorizontalAlignment="Stretch" Minimum="0" Maximum="100"
                        Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}"/>

                <StackPanel Orientation="Horizontal" Margin="0,16,0,0" HorizontalAlignment="Center" Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}">
                    <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.OhmPilotTemperatureLimit}" /><Run Text=":" />
                    </TextBlock>
                    <TextBox MinHeight="0" TextAlignment="Center" Width="40"
                             Text="{co:ValidationBinding Path=WattPilot.OhmPilotTemperatureLimitCelsius, Rule={v:MinMaxIntRule Minimum=0, Maximum=100}}" />
                    <TextBlock Margin="4,0,0,0" Text="°C" />
                </StackPanel>
                <Slider Value="{Binding WattPilot.OhmPilotTemperatureLimitCelsius, Mode=TwoWay}" HorizontalAlignment="Stretch" Minimum="0" Maximum="100"
                        Visibility="{Binding WattPilot.PvSurplusEnabled, Converter={co:Bool2Visibility}}"/>
            </StackPanel>
        </GroupBox>

        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Margin="8,16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="4" VerticalAlignment="Center" Content="{x:Static p:Resources.Undo}" Command="{Binding UndoCommand}" IsEnabled="{Binding IsInUpdate, Converter={co:BoolInverter}}" />
            <Button Grid.Column="5" VerticalAlignment="Center" Content="{x:Static p:Resources.Apply}" Command="{Binding ApplyCommand}" IsEnabled="{Binding IsInUpdate, Converter={co:BoolInverter}}"/>

        </Grid>
    </Grid>
</Window>
