<!-- ReSharper disable MarkupAttributeTypo -->
<Window x:Class="De.Hochstaetter.FroniusMonitor.Views.SelfConsumptionOptimizationView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
        xmlns:vm="clr-namespace:De.Hochstaetter.FroniusMonitor.ViewModels"
        xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
        xmlns:v="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Validation"
        xmlns:l="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Localization"
        xmlns:m="clr-namespace:De.Hochstaetter.Fronius.Models.Gen24.Settings;assembly=Fronius"
        mc:Ignorable="d"
        Title="{x:Static p:Resources.SelfConsumptionOptimization}" Width="750" SizeToContent="Height" ResizeMode="CanMinimize"
        d:DataContext="{d:DesignInstance Type=vm:SelfConsumptionOptimizationViewModel}"
>
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="MinWidth" Value="70"/>
            <Setter Property="Padding" Value="8,0"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <GroupBox Header="{x:Static p:Resources.GridPowerManagement}" Grid.Row="0" Margin="8,8,8,4">
            <Grid Margin="8,16,8,8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,4" HorizontalAlignment="Left">
                    <RadioButton IsChecked="{Binding Settings.Mode, Mode=TwoWay, Converter={co:OptimizationMode2Bool Automatic=True, Manual=False}}"
                                 Margin="8,0" Content="{x:Static p:Resources.Automatic}" />
                    <RadioButton IsChecked="{Binding Settings.Mode, Mode=TwoWay, Converter={co:OptimizationMode2Bool Automatic=False, Manual=True}}"
                                 Margin="8,0" Content="{x:Static p:Resources.Manual}" />
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left"
                                Visibility="{Binding Settings.Mode, Converter={co:OptimizationMode2Visibility}, FallbackValue=Collapsed}">
                        <RadioButton Content="{x:Static p:Resources.FeedIn}" IsChecked="{Binding IsFeedIn, Mode=TwoWay}" Margin="8,0" />
                        <RadioButton Content="{x:Static p:Resources.Consumption}" IsChecked="{Binding IsFeedIn, Mode=TwoWay, Converter={co:BoolInverter}}" Margin="8,0" />
                    </StackPanel>
                </StackPanel>
                <Grid Grid.Row="1" Margin="0,8,0,4"
                      Visibility="{Binding Settings.Mode, Converter={co:OptimizationMode2Visibility}, FallbackValue=Collapsed}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,8,0,-2" HorizontalAlignment="Center">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.Power}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=RequestedGridPower, Rule={v:MinMaxIntRule Minimum=0, Maximum=50000}}"  />
                        <TextBlock Text="W" Margin="4,0,0,0"/>
                    </StackPanel>
                    <Slider Grid.Row="3" Value="{Binding LogGridPower, Mode=TwoWay}"
                            HorizontalAlignment="Stretch"
                            Minimum="-.305" Maximum="4.6989700043360188047862611052755" />
                </Grid>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="1" Header="{x:Static p:Resources.BatteryChargingOptions}" Margin="8,4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <StackPanel Margin="16,16,8,16" Grid.Row="0">
                    <StackPanel.Resources>
                        <Style TargetType="CheckBox">
                            <Setter Property="Margin" Value="0,0,8,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <CheckBox Content="{l:Loc 'BATTERIES', 'HYB_EVU_CHARGEFROMGRID'}"
                              IsChecked="{Binding Settings.ChargeFromGrid}" />
                    <CheckBox Content="{l:Loc 'BATTERIES', 'HYB_BM_CHARGEFROMAC'}"
                              IsChecked="{Binding Settings.ChargeFromAc}" />
                    <CheckBox IsEnabled="{Binding EnableDanger}"
                              Content="{x:Static p:Resources.EnableBattery}"
                              IsChecked="{Binding Settings.IsEnabled}" />
                    <CheckBox IsEnabled="{Binding EnableDanger}"
                                  Content="{x:Static p:Resources.CalibrateBattery}"
                                  IsChecked="{Binding Settings.IsInCalibration}" />
                    <CheckBox IsEnabled="{Binding EnableDanger}"
                                  Content="{x:Static p:Resources.BatteryIsAcCoupled}"
                                  IsChecked="{Binding Settings.IsAcCoupled}" />
                </StackPanel>
                <Grid Grid.Row="1" 
                      Visibility="{Binding Settings.ChargeFromAc, Converter={co:Bool2Visibility}, FallbackValue=Collapsed}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,-2" HorizontalAlignment="Center" Grid.Row="0">
                        <TextBlock Margin="0,0,4,0">
                        <Run Text="{x:Static p:Resources.MaxHomeChargingPower}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox TextAlignment="Center" Width="40" Text="{co:ValidationBinding Path= AcPowerMinimum, Converter={co:ToAbsolute}, Rule={v:MinMaxIntRule}}"/>
                        <TextBlock Margin="4,0,0,0" Text="W"/>
                    </StackPanel>
                    <Slider Grid.Row="1" Value="{Binding LogHomePower, Mode=TwoWay}"
                            HorizontalAlignment="Stretch"
                            Minimum="-.305" Maximum="4.6989700043360188047862611052755" />
                </Grid>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="2" Header="{x:Static p:Resources.SocLimits}" Margin="8,4">
            <Grid Margin="8,16,8,12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,4">
                    <RadioButton IsChecked="{Binding Settings.Limits, Mode=TwoWay, Converter={co:SocLimits2Bool UseDefault=True, Override=False}}"
                                 Margin="8,0" Content="{x:Static p:Resources.UseManufacturerDefaults}" />
                    <RadioButton IsChecked="{Binding Settings.Limits, Mode=TwoWay, Converter={co:SocLimits2Bool UseDefault=False, Override=True}}"
                                 Margin="8,0" Content="{x:Static p:Resources.Manual}" />
                </StackPanel>
                <Grid Grid.Row="1"
                      Visibility="{Binding Settings.Limits, Converter={co:SocLimits2Visibility}, FallbackValue=Collapsed}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,-2" HorizontalAlignment="Center" Grid.Row="0">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.MinimumSoc}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=SocMin, Rule={v:RegExRule Pattern='^100$|^0*([0-9]{1,2})$', Message={x:Static p:Resources.MustBePercent}}}" />
                        <TextBlock Margin="4,0,0,0" Text="%"/>
                    </StackPanel>
                    <Slider Value="{Binding SocMin, Mode=TwoWay}" Grid.Row="1" HorizontalAlignment="Stretch" Minimum="5" Maximum="100" />
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,-2" HorizontalAlignment="Center" Grid.Row="2">
                        <TextBlock Margin="0,0,4,0">
                            <Run Text="{x:Static p:Resources.MaximumSoc}" /><Run Text=":" />
                        </TextBlock>
                        <TextBox TextAlignment="Center" Width="40"
                                 Text="{co:ValidationBinding Path=SocMax, Rule={v:RegExRule Pattern='^100$|^0*([0-9]{1,2})$', Message={x:Static p:Resources.MustBePercent}}}" />
                        <TextBlock Margin="4,0,0,0" Text="%"/>
                    </StackPanel>
                    <Slider Value="{Binding SocMax, Mode=TwoWay}" Grid.Row="3" HorizontalAlignment="Stretch" Minimum="5" Maximum="100" />
                </Grid>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="4" Header="{x:Static p:Resources.BackupConfiguration}" Margin="8,4">
            <Grid Margin="8,16,8,12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Margin="0,-4,0,-2" HorizontalAlignment="Center" Grid.Row="0">
                    <TextBlock Margin="0,0,4,0">
                        <Run Text="{l:Loc 'BATTERIES', 'HYB_BACKUP_CRITICALSOC'}" /><Run Text=":" />
                    </TextBlock>
                    <TextBox TextAlignment="Center" Width="40"
                             Text="{co:ValidationBinding Path=Settings.BackupCriticalSoc, Rule={v:RegExRule Pattern='^100$|^0*([0-9]{1,2})$', Message={x:Static p:Resources.MustBePercent}}}" />
                    <TextBlock Margin="4,0,0,0" Text="%"/>
                </StackPanel>
                <Slider Value="{Binding Settings.BackupCriticalSoc, Mode=TwoWay}" Grid.Row="1" HorizontalAlignment="Stretch" Minimum="0" Maximum="100" />
                <StackPanel Orientation="Horizontal" Margin="0,8,0,-2" HorizontalAlignment="Center" Grid.Row="2">
                    <TextBlock Margin="0,0,4,0">
                        <Run Text="{l:Loc 'BATTERIES', 'HYB_BACKUP_RESERVED'}" /><Run Text=":" />
                    </TextBlock>
                    <TextBox TextAlignment="Center" Width="40"
                             Text="{co:ValidationBinding Path=Settings.BackupReserve, Rule={v:MinMaxIntRule Minimum=5, Maximum=95}}" />
                    <TextBlock Margin="4,0,0,0" Text="%"/>
                </StackPanel>
                <Slider Value="{Binding Settings.BackupReserve, Mode=TwoWay}" Grid.Row="3" HorizontalAlignment="Stretch" Minimum="5" Maximum="95" />
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="3" Margin="8,4" Header="{x:Static p:Resources.BatteryChargingRules}">
            <DataGrid CanUserAddRows="False" RowHeaderWidth="20" SelectionUnit="FullRow"  SelectionMode="Single"  ItemsSource="{Binding ChargingRules}" AutoGenerateColumns="False" GridLinesVisibility="Vertical" AlternatingRowBackground="AntiqueWhite" BorderThickness="0" Margin="8">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="ToolTip" Value="{x:Static p:Resources.RuleTooltip}"></Setter>
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu Placement="Center">
                                    <MenuItem Header="{x:Static p:Resources.AddRule}"/>
                                    <MenuItem Header="{x:Static p:Resources.DeleteRule}"/>
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightSkyBlue"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightSkyBlue"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>

                    <Style TargetType="DataGridColumnHeader" x:Key="Es">
                        <Setter Property="Padding"  Value="10,8"/>
                    </Style>

                    <Style TargetType="DataGridCell">
                        <Setter Property="MinHeight" Value="32"/>
                        <Setter Property="VerticalContentAlignment" Value="Bottom"></Setter>
                        <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
                    </Style>

                    <Style TargetType="ComboBox">
                        <Setter Property="Margin" Value="8,0,8,0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Height" Value="28"/>
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate DataType="m:ChargingRuleType">
                                    <TextBlock Height="20" Text="{Binding Converter={co:Enum2DisplayName}}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style TargetType="CheckBox" x:Key="CheckBoxStyle">
                        <Setter Property="Margin" Value="8,2,8,0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style>

                    <Style TargetType="TextBox" x:Key="TextBoxStyle">
                        <Setter Property="Margin" Value="0,0" />
                        <Setter Property="Background" Value="White"></Setter>
                        <Setter Property="Padding" Value="6,7,0,0" />
                        <Setter Property="MaxWidth" Value="80"/>
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                    </Style>

                    <Style TargetType="TextBlock" x:Key="TextBlockStyle">
                        <Setter Property="Margin" Value="8,0" />
                        <Setter Property="MaxWidth" Value="80"/>
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                    </Style>

                </DataGrid.Resources>

                <DataGrid.Columns>

                    <DataGridCheckBoxColumn Header="{x:Static p:Resources.Active}" Binding="{Binding IsActive, UpdateSourceTrigger=PropertyChanged}" CanUserReorder="False" CanUserResize="True" CanUserSort="True" SortMemberPath="IsActive"
                                            HeaderStyle="{StaticResource Es}" ElementStyle="{StaticResource CheckBoxStyle}"/>

                    <DataGridTextColumn Header="{x:Static p:Resources.Start}" Binding="{Binding StartTime, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, Converter={co:DateConverter StringFormat=HH:mm}}" SortMemberPath="StartTime"
                                        HeaderStyle="{StaticResource Es}" CanUserReorder="False" CanUserResize="True" CanUserSort="True"
                                        ElementStyle="{StaticResource TextBlockStyle}" EditingElementStyle="{StaticResource TextBoxStyle}"/>

                    <DataGridTextColumn Header="{x:Static p:Resources.End}" Binding="{Binding EndTime, UpdateSourceTrigger=PropertyChanged, Converter={co:DateConverter StringFormat=HH:mm}}" SortMemberPath="EndTime"
                                        HeaderStyle="{StaticResource Es}" CanUserReorder="False" CanUserResize="True" CanUserSort="True"
                                        ElementStyle="{StaticResource TextBlockStyle}" EditingElementStyle="{StaticResource TextBoxStyle}"/>

                    <DataGridTemplateColumn Header="{x:Static p:Resources.RuleType}" HeaderStyle="{StaticResource Es}" CanUserReorder="False" CanUserResize="True" CanUserSort="True" SortMemberPath="RuleType">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type m:Gen24ChargingRule}">
                                <ComboBox SelectedItem="{Binding RuleType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=DataContext.(vm:SelfConsumptionOptimizationViewModel.RuleTypes), RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="{x:Static p:Resources.Power}" SortMemberPath="Power" Binding="{Binding Power, UpdateSourceTrigger=PropertyChanged}"
                                        HeaderStyle="{StaticResource Es}" CanUserReorder="False" CanUserResize="True" CanUserSort="True"
                                        ElementStyle="{StaticResource TextBlockStyle}" EditingElementStyle="{StaticResource TextBoxStyle}" />

                    <DataGridCheckBoxColumn Header="{x:Static p:Resources.Monday_One}" SortMemberPath="Monday" Binding="{Binding Monday, UpdateSourceTrigger=PropertyChanged}" CanUserReorder="False" CanUserResize="False" CanUserSort="True"
                                            HeaderStyle="{StaticResource Es}" ElementStyle="{StaticResource CheckBoxStyle}"/>

                    <DataGridCheckBoxColumn Header="{x:Static p:Resources.Tuesday_One}" SortMemberPath="Tuesday" Binding="{Binding Tuesday, UpdateSourceTrigger=PropertyChanged}" CanUserReorder="False" CanUserResize="False" CanUserSort="True"
                                            HeaderStyle="{StaticResource Es}" ElementStyle="{StaticResource CheckBoxStyle}"/>

                    <DataGridCheckBoxColumn Header="{x:Static p:Resources.Wednesday_One}" SortMemberPath="Wednesday" Binding="{Binding Wednesday, UpdateSourceTrigger=PropertyChanged}" CanUserReorder="False" CanUserResize="False" CanUserSort="True"
                                            HeaderStyle="{StaticResource Es}" ElementStyle="{StaticResource CheckBoxStyle}"/>

                    <DataGridCheckBoxColumn Header="{x:Static p:Resources.Thursday_One}" SortMemberPath="Thursday" Binding="{Binding Thursday, UpdateSourceTrigger=PropertyChanged}" CanUserReorder="False" CanUserResize="False" CanUserSort="True"
                                            HeaderStyle="{StaticResource Es}" ElementStyle="{StaticResource CheckBoxStyle}"/>

                    <DataGridCheckBoxColumn Header="{x:Static p:Resources.Friday_One}" SortMemberPath="Friday" Binding="{Binding Friday, UpdateSourceTrigger=PropertyChanged}" CanUserReorder="False" CanUserResize="False" CanUserSort="True"
                                            HeaderStyle="{StaticResource Es}" ElementStyle="{StaticResource CheckBoxStyle}"/>

                    <DataGridCheckBoxColumn Header="{x:Static p:Resources.Saturday_One}" SortMemberPath="Saturday" Binding="{Binding Saturday, UpdateSourceTrigger=PropertyChanged}" CanUserReorder="False" CanUserResize="False" CanUserSort="True"
                                            HeaderStyle="{StaticResource Es}" ElementStyle="{StaticResource CheckBoxStyle}"/>

                    <DataGridCheckBoxColumn Header="{x:Static p:Resources.Sunday_One}" SortMemberPath="Sunday" Binding="{Binding Sunday, UpdateSourceTrigger=PropertyChanged}" CanUserReorder="False" CanUserResize="False" CanUserSort="True"
                                            HeaderStyle="{StaticResource Es}" ElementStyle="{StaticResource CheckBoxStyle}"/>

                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <Grid Grid.Row="5" VerticalAlignment="Bottom" Margin="8,16,0,16" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{x:Static p:Resources.Danger}" Margin="0,0,4,0" VerticalAlignment="Center">
                <Run Text=":"/>
            </TextBlock>
            <ToggleButton Grid.Column="1" Height="18" VerticalAlignment="Center" IsChecked="{Binding EnableDanger}"/>
            <Button Grid.Column="3"  VerticalAlignment="Center" Content="{x:Static p:Resources.Undo}" Command="{Binding UndoCommand}" />
            <Button Grid.Column="4"  VerticalAlignment="Center" Content="{x:Static p:Resources.Apply}" Command="{Binding ApplyCommand}" />
        </Grid>

    </Grid>
</Window>