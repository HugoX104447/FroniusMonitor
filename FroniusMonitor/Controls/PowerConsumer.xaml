<ContentControl x:Class="De.Hochstaetter.FroniusMonitor.Controls.PowerConsumer"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:local="clr-namespace:De.Hochstaetter.FroniusMonitor.Controls"
                xmlns:p="clr-namespace:De.Hochstaetter.Fronius.Localization;assembly=Fronius"
                xmlns:co="clr-namespace:De.Hochstaetter.FroniusMonitor.Wpf.Converters"
                xmlns:gl="clr-namespace:System.Globalization;assembly=System.Runtime"
                xmlns:contracts="clr-namespace:De.Hochstaetter.Fronius.Contracts;assembly=Fronius"
                mc:Ignorable="d"
                d:DesignHeight="75" d:DesignWidth="210">


    <ContentControl.Resources>
    </ContentControl.Resources>


    <Viewbox DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:PowerConsumer}}">
        <Border BorderBrush="DimGray" BorderThickness="1" Width="110">
            <Grid x:Name="BackgroundProvider" Background="LightGray">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <Style TargetType="Viewbox">
                        <Setter Property="StretchDirection" Value="DownOnly" />
                        <Setter Property="Margin" Value="4,0" />
                    </Style>
                </Grid.Resources>
                <Viewbox Grid.Row="0">
                    <TextBlock FontSize="8" TextAlignment="Center" Text="{Binding Path=Device.(contracts:IPowerConsumer1P.Model), FallbackValue='---'}" />
                </Viewbox>
                <Viewbox Grid.Row="1">
                    <TextBlock FontSize="8" TextAlignment="Center" Text="{Binding Path=Device.(contracts:IHaveDisplayName.DisplayName), FallbackValue=---}" />
                </Viewbox>

                <ToggleButton IsEnabled="{Binding Path=Device.(contracts:ISwitchable.IsSwitchingEnabled), FallbackValue=False}"
                              Visibility="{Binding Path=Device.(contracts:ISwitchable.CanSwitch), Converter={co:Bool2Visibility}, FallbackValue=Visible}"
                              Click="OnPowerButtonClick"
                              Grid.Row="2" Height="7" Margin="0,2,0,2"
                              IsChecked="{Binding Path=Device.(contracts:ISwitchable.IsTurnedOn), Mode=OneWay, FallbackValue={x:Null}}" />

                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="FontSize" Value="7" />
                            <Setter Property="Margin" Value="2,7,2,0" />
                        </Style>

                        <Style TargetType="local:NonUpdatingSlider" BasedOn="{StaticResource PowerConsumerSliderStyle}">
                            <Setter Property="Margin" Value="2,4,0,0" />
                            <Setter Property="TickPlacement" Value="TopLeft" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="IsSnapToTickEnabled" Value="False" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </Grid.Resources>

                    <TextBlock Grid.Row="0" Grid.Column="1"
                               Visibility="{Binding Path=Device.(contracts:IDimmable.CanDim), Converter={co:Bool2Visibility}, FallbackValue=Visible}">
                        <Run Text="B:" />
                        <Run Text="{Binding Value, ElementName=DimSlider, Mode=OneWay, StringFormat=P0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, FallbackValue=---, TargetNullValue=---}" />
                    </TextBlock>

                    <local:NonUpdatingSlider Grid.Row="0" Grid.Column="0" x:Name="DimSlider" TickFrequency=".1" Minimum="0" Maximum="1"
                                             Visibility="{Binding Path=Device.(contracts:IDimmable.CanDim), Converter={co:Bool2Visibility}, FallbackValue=Visible}"
                                             Value="{Binding Path=Device.(contracts:IDimmable.Level), Mode=OneWay, FallbackValue=0, TargetNullValue=0}"
                                             IsEnabled="{Binding Path=Device.(contracts:IDimmable.IsDimmingEnabled), FallbackValue=False}"
                                             ThumbDragCompleted="OnDimLevelChanged" />

                    <TextBlock Grid.Row="1" Grid.Column="1" Opacity="{Binding Path=Device.(contracts:IColorTemperatureControl.IsColorTemperatureActive), Converter={co:Bool2Double False=.5, True=1}, FallbackValue=.5}"
                               Visibility="{Binding Path=Device.(contracts:IColorTemperatureControl.HasColorTemperatureControl), Converter={co:Bool2Visibility}, FallbackValue=Visible}">
                        <Run Text="{Binding Value, ElementName=TemperatureSlider, Mode=OneWay, StringFormat=N0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, FallbackValue=---, TargetNullValue=---}" />
                        <Run Text="K" />
                    </TextBlock>

                    <local:NonUpdatingSlider Grid.Row="1" Grid.Column="0" x:Name="TemperatureSlider"
                                             Visibility="{Binding Path=Device.(contracts:IColorTemperatureControl.HasColorTemperatureControl), Converter={co:Bool2Visibility}, FallbackValue=Visible}"
                                             Minimum="{Binding Path=Device.(contracts:IColorTemperatureControl.MinTemperatureKelvin), Mode=OneWay, FallbackValue=2700}"
                                             Maximum="{Binding Path=Device.(contracts:IColorTemperatureControl.MaxTemperatureKelvin), Mode=OneWay, FallbackValue=6500}"
                                             Value="{Binding Path=Device.(contracts:IColorTemperatureControl.ColorTemperatureKelvin), Mode=OneWay, FallbackValue=0, TargetNullValue=0}"
                                             Ticks="{Binding RelativeSource={RelativeSource Self}, Converter={co:GetTemperatureTicks 500}}"
                                             IsEnabled="{Binding Path=Device.(contracts:IColorTemperatureControl.IsColorTemperatureEnabled), FallbackValue=False}"
                                             ThumbDragCompleted="OnColorTemperatureChanged" />

                    <TextBlock Grid.Row="2" Grid.Column="1" Opacity="{Binding Path=Device.(contracts:IHsvColorControl.IsHsvActive), Converter={co:Bool2Double False=.5, True=1}, FallbackValue=.5}"
                               Visibility="{Binding Path=Device.(contracts:IHsvColorControl.HasHsvColorControl), Converter={co:Bool2Visibility}, FallbackValue=Visible}">
                        <Run Text="H:" />
                        <Run Text="{Binding Value, ElementName=HueSlider, Mode=OneWay, StringFormat=N0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, FallbackValue=---, TargetNullValue=---}" /><Run Text="°" />
                    </TextBlock>

                    <local:NonUpdatingSlider Grid.Row="2" Grid.Column="0" x:Name="HueSlider" Minimum="0" Maximum="360" TickFrequency="30"
                                             Visibility="{Binding Path=Device.(contracts:IHsvColorControl.HasHsvColorControl), Converter={co:Bool2Visibility}, FallbackValue=Visible}"
                                             Value="{Binding Path=Device.(contracts:IHsvColorControl.HueDegrees), Mode=OneWay, FallbackValue=0, TargetNullValue=0}"
                                             IsEnabled="{Binding Path=Device.(contracts:IHsvColorControl.IsHsvEnabled), FallbackValue=False}"
                                             ThumbDragCompleted="OnHueChanged">
                        <local:NonUpdatingSlider.Resources>
                            <LinearGradientBrush x:Key="TrackBackground" StartPoint="0,0" EndPoint="1,0" MappingMode="RelativeToBoundingBox">
                                <GradientStop Color="Red" Offset="0" />
                                <GradientStop Color="Yellow" Offset=".16667" />
                                <GradientStop Color="#00ff00" Offset="0.3333" />
                                <GradientStop Color="#00ffff" Offset="0.5" />
                                <GradientStop Color="Blue" Offset=".666667" />
                                <GradientStop Color="#ff00ff" Offset=".83333333333" />
                                <GradientStop Color="Red" Offset="1" />
                            </LinearGradientBrush>
                        </local:NonUpdatingSlider.Resources>
                    </local:NonUpdatingSlider>

                    <TextBlock Grid.Row="3" Grid.Column="1" Opacity="{Binding Path=Device.(contracts:IHsvColorControl.IsHsvActive), Converter={co:Bool2Double False=.5, True=1}, FallbackValue=.5}"
                               Visibility="{Binding Path=Device.(contracts:IHsvColorControl.HasHsvColorControl), Converter={co:Bool2Visibility}, FallbackValue=Visible}">
                        <Run Text="S:" />
                        <Run Text="{Binding Value, ElementName=SaturationSlider, Mode=OneWay, StringFormat=P0, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, FallbackValue=---, TargetNullValue=---}" />
                    </TextBlock>

                    <local:NonUpdatingSlider Grid.Row="3" Grid.Column="0" Minimum="0" Maximum="1" TickFrequency=".1" x:Name="SaturationSlider"
                                             Visibility="{Binding Path=Device.(contracts:IHsvColorControl.HasHsvColorControl), Converter={co:Bool2Visibility}, FallbackValue=Visible}"
                                             Value="{Binding Path=Device.(contracts:IHsvColorControl.Saturation), Mode=OneWay, FallbackValue=0, TargetNullValue=0}"
                                             IsEnabled="{Binding Path=Device.(contracts:IHsvColorControl.IsHsvEnabled), FallbackValue=False}"
                                             ThumbDragCompleted="OnSaturationChanged" />

                </Grid>

                <Grid Visibility="{Binding Path=Device.(contracts:IPowerMeter1P.CanMeasurePower), Converter={co:Bool2Visibility}, FallbackValue=Visible}" Grid.Row="4" Background="#B3DBC6" Margin="4,2,4,4">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="FontSize" Value="8" />
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static p:Resources.Power}" />
                    <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right">
                        <Run Text="{Binding Path=Device.(contracts:IPowerMeter1P.PowerWatts), StringFormat=N1, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, TargetNullValue=---, Mode=OneWay, FallbackValue=---}" />
                    </TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text=" W" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static p:Resources.Voltage}" />
                    <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right">
                        <Run Text="{Binding Path=Device.(contracts:IPowerMeter1P.Voltage), StringFormat=N1, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, TargetNullValue=---, Mode=OneWay, FallbackValue=---}" />
                    </TextBlock>
                    <TextBlock Grid.Row="1" Grid.Column="2" Text=" V" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static p:Resources.Energy}" />
                    <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right">
                        <Run Text="{Binding Path=Device.(contracts:IPowerMeter1P.EnergyKiloWattHours), StringFormat=N1, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, Mode=OneWay,TargetNullValue=---, FallbackValue=---}" />
                    </TextBlock>
                    <TextBlock Grid.Row="2" Grid.Column="2" Text=" kWh" />

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static p:Resources.Temperature}" />
                    <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right">
                        <Run Text="{Binding Path=Device.(contracts:ITemperatureSensor.TemperatureCelsius), StringFormat=N1, ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}, Mode=OneWay,TargetNullValue=---, FallbackValue=---}" />
                    </TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="2" Text=" °C" />

                </Grid>
            </Grid>
        </Border>
    </Viewbox>
</ContentControl>